on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

env:
  SCCACHE_GHA_ENABLED: true
  RUSTC_WRAPPER: sccache

jobs:
  release-please:
    name: release-please
    runs-on: ubuntu-latest
    outputs:
      did_release: ${{ steps.release.outputs.releases_created }}
      packages: ${{ steps.release.outputs.paths_released }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: rust
          command: manifest
          default-branch: master
          package-name: premium-dl

  publish_to_crates_io:
    name: publish to crates.io
    needs: release-please
    if: ${{ needs.release-please.outputs.did_release }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - id: toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Publish
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  build_github_artifacts:
    name: build github artifacts
    needs: release-please
    if: ${{ needs.release-please.outputs.did_release && contains(fromJSON(needs.release-please.outputs.packages), 'crates/uggo') }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - id: toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4

      - uses: actions/setup-node@v4
        with:
          node-version: "14"

      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=version::$(cargo pkgid --package uggo | cut -d# -f2 | cut -d: -f2)"
          echo "::set-output name=triple::$(rustc -vV | sed -n 's|host: ||p')"

      - name: Build
        run: cargo build --package uggo --release

      - name: Move executable
        run: |
          npm install -g move-file-cli mkdirp
          mkdirp artifacts
          if [ "$RUNNER_OS" == "Windows" ]; then
            move-file target/release/uggo.exe artifacts/uggo-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.triple }}.exe
          else
            move-file target/release/uggo artifacts/uggo-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.triple }}
          fi
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
          tag_name: "uggo-v${{ steps.vars.outputs.version }}"
